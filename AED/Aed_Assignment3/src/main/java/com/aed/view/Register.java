/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aed.view;
import com.aed.model.Community;
import com.aed.model.Doctor;
import com.aed.model.Person;
import com.aed.view.Additions;
import com.aed.view.LoginJFrame;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author just_chakri
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pGender = new javax.swing.ButtonGroup();
        jPanel9 = new javax.swing.JPanel();
        pName = new javax.swing.JTextField();
        pAge = new javax.swing.JTextField();
        pMale = new javax.swing.JRadioButton();
        pFemale = new javax.swing.JRadioButton();
        pCity = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        pHno = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        pComm = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        pSubmit = new javax.swing.JButton();
        pUser = new javax.swing.JTextField();
        pPass = new javax.swing.JPasswordField();
        pcPass = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pNameActionPerformed(evt);
            }
        });

        pGender.add(pMale);
        pMale.setText("Male");
        pMale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pMaleMouseClicked(evt);
            }
        });

        pGender.add(pFemale);
        pFemale.setText("Female");
        pFemale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pFemaleMouseClicked(evt);
            }
        });

        pCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York", "California" }));
        pCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCityActionPerformed(evt);
            }
        });

        jLabel12.setText("Name");

        jLabel13.setText("Age");

        jLabel14.setText("Gender");

        jLabel16.setText("City");

        jLabel17.setText("Community");

        pComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCommActionPerformed(evt);
            }
        });

        jLabel18.setText("House Number");

        pSubmit.setForeground(new java.awt.Color(204, 204, 204));
        pSubmit.setText("Submit");
        pSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pSubmitActionPerformed(evt);
            }
        });

        pUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pUserActionPerformed(evt);
            }
        });

        pPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pPassActionPerformed(evt);
            }
        });

        pcPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcPassActionPerformed(evt);
            }
        });

        jLabel47.setText("Username");

        jLabel48.setText("Password");

        jLabel49.setText("Confirm Password");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18))
                        .addGap(140, 140, 140)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pCity, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pComm, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pHno, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(pSubmit))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel47)
                            .addComponent(jLabel48)
                            .addComponent(jLabel49))
                        .addGap(120, 120, 120)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(pMale)
                                .addGap(34, 34, 34)
                                .addComponent(pFemale))
                            .addComponent(pAge, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                            .addComponent(pName)
                            .addComponent(pUser)
                            .addComponent(pPass)
                            .addComponent(pcPass))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(pMale)
                                        .addComponent(pFemale)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel47))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pcPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(pCity, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(pComm, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pHno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(70, 70, 70)
                .addComponent(pSubmit)
                .addContainerGap(514, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 877, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1468, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 476, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pNameActionPerformed

    private void pMaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pMaleMouseClicked
        // TODO add your handling code here:
        pMale.setActionCommand("Male");
    }//GEN-LAST:event_pMaleMouseClicked

    private void pFemaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pFemaleMouseClicked
        // TODO add your handling code here:
        pFemale.setActionCommand("Female");
    }//GEN-LAST:event_pFemaleMouseClicked

    private void pCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCityActionPerformed
        // TODO add your handling code here:
        pComm.removeAllItems();
        for(Integer i : Additions.communityMap.keySet()){
            if(pCity.getSelectedItem().toString()== Additions.communityMap.get(i).getCity())
            pComm.addItem(Additions.communityMap.get(i).getName());

        }
    }//GEN-LAST:event_pCityActionPerformed

    private void pCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCommActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pCommActionPerformed

    private void pSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pSubmitActionPerformed
        // TODO add your handling code here:
        Additions.flag=0;

        try {
            ValidatePerData();
        } catch (Exception ex) {
            Logger.getLogger(Additions.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(Additions.flag ==0){
            int temp=0;
            for(Community comm : Additions.communityMap.values()){
                if(comm.getName() == (String) pComm.getSelectedItem()){
                    temp = comm.getCommunityId();
                    break;
                }
            }

            Additions.personMap.put(Additions.personId, new Person(Additions.personId, pName.getText(),pUser.getText(),pPass.getText(), "Person",Integer.valueOf(pAge.getText()),pGender.getSelection().getActionCommand(),"xyz",Integer.parseInt(pHno.getText()),(String) pCity.getSelectedItem(),temp));


            resetPerData();

            JOptionPane.showMessageDialog(this, "Data Entered");
            for(Community i : Additions.communityMap.values()){
                //System.out.println("Going inside");
                if(i.getName()== (String)pComm.getSelectedItem()){
                    i.addPerson(Additions.personId++);
                    //System.out.println("Added Person");
                }
                //System.out.println(i.xyz());
            }
            new LoginJFrame(1).show();
            dispose();

        }

    }//GEN-LAST:event_pSubmitActionPerformed

    private void pUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pUserActionPerformed

    private void pPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pPassActionPerformed

    private void pcPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField pAge;
    private javax.swing.JComboBox<String> pCity;
    private javax.swing.JComboBox<String> pComm;
    private javax.swing.JRadioButton pFemale;
    private javax.swing.ButtonGroup pGender;
    private javax.swing.JTextField pHno;
    private javax.swing.JRadioButton pMale;
    private javax.swing.JTextField pName;
    private javax.swing.JPasswordField pPass;
    private javax.swing.JButton pSubmit;
    private javax.swing.JTextField pUser;
    private javax.swing.JTextField pcPass;
    // End of variables declaration//GEN-END:variables

 private void ValidatePerData() {
                try {
            if (pName.getText().equals("")) {
                throw new Exception("name not entered");
            }
        } catch (Exception e) { //exception handling
            JOptionPane.showMessageDialog(this, "Please enter name");
            Additions.flag = 1;
        }
        

        if (Additions.flag == 0) {
            try {
                if (pAge.getText().equals("") || !Pattern.matches("[1-9]{1}[0-9]{1}", pAge.getText())) {
                    throw new Exception("Incorrect age");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Age");
                Additions.flag = 1;
            }
        }
        if (Additions.flag == 0) {
            try {
                String gen;
                if(pMale.isSelected()==false && pFemale.isSelected()==false)
                    throw new Exception("Gender not selected");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gender not selected");
                
                Additions.flag = 1;
            }
        }

        if(Additions.flag==0){
            try {
                if (pUser.getText().equals("")) {
                    throw new Exception("Username not entered");
                }
            } catch (Exception e) { //exception handling
                JOptionPane.showMessageDialog(this, "Please enter Username");
                Additions.flag = 1;
            }
        }
        if(Additions.flag==0){
            try {
                if (pPass.getText().equals("")) {
                    throw new Exception("Password  not entered");
                }
            } catch (Exception e) { //exception handling
                JOptionPane.showMessageDialog(this, "Please enter Password");
                Additions.flag = 1;
            }
        }
        
        if(Additions.flag==0){
            try {
                if (pcPass.getText().equals("")) {
                    throw new Exception("Confirm password not entered");
                }
            } catch (Exception e) { //exception handling
                JOptionPane.showMessageDialog(this, "Please confirm Password");
                Additions.flag = 1;
            }
        }
        
                if(Additions.flag==0){
            try {
                if (pHno.getText().equals("")) {
                    throw new Exception("House no not entered");
                }
            } catch (Exception e) { //exception handling
                JOptionPane.showMessageDialog(this, "Please enter House no");
                Additions.flag = 1;
            }
        }
                
                if(Additions.flag==0){
            try {
                
                for(Person i : Additions.personMap.values()){
                    if(i.getUserName().equals(pUser.getText()))
                        throw new Exception("Username exists ");
                        
                }

            } catch (Exception e) { //exception handling
                JOptionPane.showMessageDialog(this, "Username already exists");
                Additions.flag = 1;
            }
        }
                if(Additions.flag==0){
            try {
                if (! (pPass.getText().equals(pcPass.getText()))) {
                    throw new Exception("Password mismatch");
                }
            } catch (Exception e) { //exception handling
                JOptionPane.showMessageDialog(this, "Passwords do not match");
                Additions.flag = 1;
            }
        }
    }
 
     private void resetPerData() {
        pName.setText("");
        pAge.setText("");
        pHno.setText("");
    }
     
}
